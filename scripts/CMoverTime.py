#!/home/schwancr/Installed/epd/bin/python -u

from optparse import OptionParser
parser = OptionParser()

parser.add_option('--tr','--trajectories-directory',dest='trj_dir',default='./Trajectories',help='Trajectories directory containing hf5 formatted trajectories')
parser.add_option('-P','--procs',dest='procs',default=1,type=int, help='Number of procs to use in the calculation')
parser.add_option('-i',dest='Aind',help='AtomIndices.dat file generated by msmbuilder')
parser.add_option('-w',dest='write_dir',default='./Trajectories_MC',help='Output directory to write data to [ Trajectories_MC ]')
parser.add_option('-c',dest='cutoff',default=0.4,type=float,help='Cutoff to define a cutoff (nm) [ 0.4 ]')
(options,args) = parser.parse_args()

import numpy as np
from msmbuilder import Trajectory
import os, re
from pyschwancr import msmTools, dataIO

trajFNs = [ fn for fn in os.listdir( options.trj_dir ) if re.search( '^trj\d+\.lh5', fn ) ]
Aind = dataIO.readData( options.Aind ).astype(int)

for fn in trajFNs[:1]:
   print "Working on %s" % fn,
   traj = Trajectory.Trajectory.LoadFromLHDF( os.path.join( options.trj_dir, fn ) )
   traj.RestrictAtomIndices( Aind ) # Restrict atom indices
   traj['XYZList'] = traj['XYZList']
   ContactMaps = msmTools.calcContacts( traj, cutoff = options.cutoff, procs = options.procs )

   np.save( os.path.join( options.write_dir, fn[:-3]+'npy' ), ContactMaps )
   print "Saved data to %s" % (os.path.join( options.write_dir, fn[:-3]+'npy' ))


